DevOps Phases
	- Continuous Development
	- Continuous Testing
	- Continuous Intgration
	- Continuous Deployment
	- Continuous Monitoring

Version Control
Git
Git Installation
Git Lifecycle
	- Working Directory
	- Initialization
	- Staging(can include or exclued from commit)
	- Local Storage (Commit)
	- Push to GitHub(Cloud Server)

Git Common Command
	Git Init
		This is used for initializing your local folder(working directory) as local Git Repository.
	Git status
		This is used for checking the status of your local Git Repository. Like, what are the updated or newly added file to your local git repository.
	Git add <filename>
		This is used for adding all the updated or newly added file to the staging area so that you can commit those files to your local Git Repository.
	Git commit -m "<comment>“
		This is used for saving or commit the staged changes to your local Git Repository.
	git remote add origin <remote repo path>
		This is used for mapping your remote git repository with your local Git Repository. So that when you push the committed changes, those will get pushed to your remote repository
	git push –u origin main
		This is used to push you committed changes to you remote repository.
	

Advanced commands
	git clone
		cloning/getting your existing remote repository to you local
	git pull
		get/download the latest chages from the remote branch
	git fetch
		fetch down all the branches from remote repository
	git branch
		list all the branches from your local repository. A '*' will appear next to the current active branch
	git branch <branch name>
		Creates new branch
	git checkout <branch name>
		switch to the given branch
	
	git reset <file name>
		unstage but keeps the changes in the working derectory for the given file
	git restore --stage <filename>
		unstage and undo changes from the working directory
	git reset head~1
		undoing your last one commit
	git cherry-pick <commit-hash>

	

Master/Main branch 
	Develop - Integration branch which is used to interate the different branches from different developers.
		feature branches - by different developer

Pull request - pull is used o merge your feature branch into the parent branch.
-------------------------------
Jenkins

JDK download
https://www.oracle.com/java/technologies/downloads/

Jenkins Installation Video
https://www.youtube.com/watch?v=MlvNXFdPhB8

Jenkins full course 
https://www.youtube.com/watch?v=FX322RVNGj4
--------------------------------
Create Agent in Jenkins
open jenkins Server: Dashboard
http:\\localhost:8080

click on "Manage Jenkins" from left panel

click on "Manage Node and Clouds"

click on "New Node" to create new Agent/Node

Provide the details for new node and click on Save, it

Enable the jnlp settings:
	click on "Manage Jenkins" from left panel
	Click on "Configure Global Security"
	Locate the "TCP Port for Inbound Ajent" 
	Select "Random"
	Click on "Save"

Connect your Agent to Jenkins Executor:
	Click on your Agent created "Demo-Node"
	Click on "Launch" button, it will download agent file
	Open the command prompt and paste below command and hit enter
		javaws http://localhost:8080/computer/Demo%5FNode/jenkins-agent.jnlp
	it start a java application which will connect your agent to Jenkins Executor


---------------------
DevOps Overview 
What is DevOps
Why DevOps
Waterfall Model
Technical Definition of DevOps
Phases of DevOps
Who is DevOps Engineer
Version Control
What is git
Git Installation
Common Git Commands
Why Continuous integration?
What is Jenkins?
What are Jenkins Features?
Jenkins architecture
Jenkins installation & setup
Setting up a CI/CD pipeline


------------------------
Heirarchy of Git
	- Repository
	- Branch (can have multiple branches) 	

